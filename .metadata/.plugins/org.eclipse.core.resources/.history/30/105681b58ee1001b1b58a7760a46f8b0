package com.example.easynotes.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.easynotes.repository.NoteRepository;

import services.department.model.Department;
import services.department.repository.DepartmentRepository;
import services.department.service.DepartmentService;

/**
 * Created by rajeevkumarsingh on 27/06/17.
 */
@RestController
@RequestMapping("/api")
public class NoteController {

    @Autowired
    NoteRepository noteRepository;
    
    @Autowired
	DepartmentRepository departmentService;
	 
	public Department create(@RequestBody Department department) {
		return departmentService.save(department);
	}
	
	/*
	 * @GetMapping("/notes") public List<Note> getAllNotes() { return
	 * noteRepository.findAll(); }
	 * 
	 * @PostMapping("/notes") public Note createNote(@Valid @RequestBody Note note)
	 * { return noteRepository.save(note); }
	 * 
	 * @GetMapping("/notes/{id}") public Note getNoteById(@PathVariable(value =
	 * "id") Long noteId) { return noteRepository.findById(noteId) .orElseThrow(()
	 * -> new ResourceNotFoundException("Note", "id", noteId)); }
	 * 
	 * @PutMapping("/notes/{id}") public Note updateNote(@PathVariable(value = "id")
	 * Long noteId,
	 * 
	 * @Valid @RequestBody Note noteDetails) {
	 * 
	 * Note note = noteRepository.findById(noteId) .orElseThrow(() -> new
	 * ResourceNotFoundException("Note", "id", noteId));
	 * 
	 * note.setTitle(noteDetails.getTitle());
	 * note.setContent(noteDetails.getContent());
	 * 
	 * Note updatedNote = noteRepository.save(note); return updatedNote; }
	 * 
	 * @DeleteMapping("/notes/{id}") public ResponseEntity<?>
	 * deleteNote(@PathVariable(value = "id") Long noteId) { Note note =
	 * noteRepository.findById(noteId) .orElseThrow(() -> new
	 * ResourceNotFoundException("Note", "id", noteId));
	 * 
	 * noteRepository.delete(note);
	 * 
	 * return ResponseEntity.ok().build(); }
	 */
}
