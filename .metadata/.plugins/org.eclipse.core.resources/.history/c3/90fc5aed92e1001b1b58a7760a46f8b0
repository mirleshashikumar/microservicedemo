package com.example.services.department.service;

import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.department.repository.EmployeeRepository;
import com.exampledepartment.model.CoreException;
import com.exampledepartment.model.Employee;

@Service("employeeService")
public class EmployeeService {

	private static final Logger LOGGER = LoggerFactory.getLogger(EmployeeService.class);

	@Autowired
	EmployeeRepository repository;
		
	
	public Employee add(Employee employee) {
		LOGGER.info("Employee add: {}", employee);
		return repository.save(employee);
	}
	
	public Employee findById(Long id) {
		Employee employee=new Employee();
		LOGGER.info("Employee find: id={}", id);
		 Optional<Employee> employeeResponse = repository.findById(id);
		 if(employeeResponse.isPresent()) {
			 employee=employeeResponse.get();
		 }
		 return employee;
	}
	
	public List<Employee> findAll() {
		LOGGER.info("Employee Department");
		return repository.findAll();
	}
	
	public void deleteById(Long id) throws CoreException {
		 Optional<Employee> employeeResponse = repository.findById(id);
		 if(employeeResponse.isPresent()) {
			 repository.deleteById(id);
		 }else {
			 String message="Resource not found";
		 throw new CoreException(message) ;
		 }
		
	}	
	
	public void updateById(Employee employee,Long id) throws CoreException {
		 Optional<Employee> employeeResponse = repository.findById(id);
		 if(employeeResponse.isPresent()) {
			 repository.save(employee);
		 }else {
			 String message="Resource not found";
		 throw new CoreException(message) ;
		 }
		
	}	
}
